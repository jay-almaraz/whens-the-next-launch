// Generated by https://quicktype.io

export interface Launch {
  fairings: Fairings;
  links: Links;
  static_fire_date_utc: null;
  static_fire_date_unix: null;
  tbd: boolean;
  net: boolean;
  window: null;
  rocket: string;
  success: null;
  details: string;
  crew: any[];
  ships: any[];
  capsules: any[];
  payloads: string[];
  launchpad: string;
  auto_update: boolean;
  launch_library_id: string;
  failures: any[];
  flight_number: number;
  name: string;
  date_utc: string;
  date_unix: number;
  date_local: string;
  date_precision: string;
  upcoming: boolean;
  cores: Core[];
  id: string;
}

interface Core {
  core: null;
  flight: null;
  gridfins: null;
  legs: null;
  reused: null;
  landing_attempt: null;
  landing_success: null;
  landing_type: null;
  landpad: null;
}

interface Fairings {
  reused: null;
  recovery_attempt: null;
  recovered: null;
  ships: any[];
}

interface Links {
  patch: Patch;
  reddit: Reddit;
  flickr: Flickr;
  presskit: null;
  webcast: null;
  youtube_id: null;
  article: null;
  wikipedia: string;
}

interface Flickr {
  small: any[];
  original: any[];
}

interface Patch {
  small: string;
  large: string;
}

interface Reddit {
  campaign: string;
  launch: null;
  media: null;
  recovery: string;
}

async function getNextLaunch(): Promise<Launch> {
  const res = await fetch("https://api.spacexdata.com/v4/launches/next");
  const data: Launch = await res.json();
  return Promise.resolve(data);
}

export { getNextLaunch };
